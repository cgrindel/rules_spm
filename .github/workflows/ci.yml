name: CI for PR Merge

on:
  pull_request:
    branches: [ main ]

jobs:

  macos_build:
    runs-on: macos-11.0
    # GH112: Remove the use of a custom Bazel when Keith's patch is merged and 
    # released.
    env:
      USE_BAZEL_VERSION: cgrindel/6.0.0-keith_patch
    steps:
    - uses: actions/checkout@v2
    - uses: cgrindel/gha_set_up_bazel@v1
      with:
        repo_name: rules_spm
    - uses: ./.github/actions/build_and_test

  ubuntu_build:
    runs-on: ubuntu-20.04
    env:
      CC: clang
    steps:
    - uses: cgrindel/gha_install_swift_on_ubuntu@v1
      with:
        swift_release_tag: "swift-5.5.2-RELEASE"
        ubuntu_version: "20.04"
    - uses: actions/checkout@v2
    - name: Update local.bazelrc with Linux Flags
      shell: bash
      run: |
        cat >> "local.bazelrc" <<EOF
        # Need to expose the PATH so that the Swift toolchain can be found
        build --action_env=PATH
        EOF
    # - name: Bazel Config for Linux
    #   shell: bash
    #   run: |
    #     # Make sure that the Swift bin directory is first in the PATH. This addresses
    #     # the `invalid linker name in argument '-fuse-ld=gold'` error when running
    #     # SPM. In short, it allows SPM to find the correct linker.
    #     swift_exec=$(which swift)
    #     real_swift_exec=$(realpath $swift_exec)
    #     real_swift_dir=$(dirname $real_swift_exec)
    #     new_path="${real_swift_dir}:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
    #     cat >>local.bazelrc <<EOF
    #     build --action_env=PATH=${new_path}
    #     EOF
    - uses: cgrindel/gha_set_up_bazel@v1
      with:
        repo_name: rules_spm
    - uses: ./.github/actions/build_and_test
