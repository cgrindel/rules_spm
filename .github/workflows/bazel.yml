name: Build

on:
  pull_request:
    branches: [ main ]

jobs:
  macos_build:

    runs-on: macos-11.0

    steps:
    - uses: actions/checkout@v2

    - name: Write local.bazelrc File
      shell: bash
      run: |
        cat >local.bazelrc <<EOF
        common --config=ci
        EOF

    - name: Output the Bazel Info
      shell: bash
      run: |
        bazelisk info

    - name: Execute Tests
      shell: bash
      run: |
        bazelisk test //... 

    - name: Build Anything Not Tested
      shell: bash
      run: |
        bazelisk build //... 

    TODO: RESTORE ME
    - name: Test Simple Example with Default Xcode
      shell: bash
      run: |
        cd examples/simple
        bazelisk test //...

    # TODO: RESTORE ME
    # ERROR:
    # error: terminated(128): DEVELOPER_DIR=/Applications/Xcode_12.4.app/Contents/Developer __CF_USER_TEXT_ENCODING=0x1F5:0:0 TMPDIR=/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/ _=bazel-out/host/bin/external/build_bazel_rules_swift/tools/worker/worker GIT_SSH_COMMAND=ssh -oBatchMode=yes *** XCODE_VERSION_OVERRIDE=12.4.0.12D4e SDKROOT=/Applications/Xcode_12.4.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX11.1.sdk SHLVL=1 PATH=/private/var/tmp/_bazel_runner/4bd0d8640a6b3aa42285e35d21688dd6/sandbox/darwin-sandbox/204/execroot/simple_example/external/cgrindel_rules_spm_local_config/spm_utilities:/usr/gnu/bin:/usr/local/bin:/bin:/usr/bin:. GIT_TERMINAL_PROMPT=0 git -C /private/var/tmp/_bazel_runner/4bd0d8640a6b3aa42285e35d21688dd6/sandbox/darwin-sandbox/204/execroot/simple_example/bazel-out/darwin-fastbuild/bin/external/swift_pkgs/spm_build/repositories/swift-log-df1c07b5 remote update -p output:
    # unable to restore state from /private/var/tmp/_bazel_runner/4bd0d8640a6b3aa42285e35d21688dd6/sandbox/darwin-sandbox/204/execroot/simple_example/bazel-out/darwin-fastbuild/bin/external/swift_pkgs/spm_build/workspace-state.json; missingKey("path")
    #     fatal: not a git repository (or any of the parent directories): .git
    #
    # THOUGHTS:
    # - I think that it might be related to this SPM issue:
    #   https://github.com/apple/swift-package-manager/commit/f2dd6ce55446859975761be1d1c44e509e5bc309
    #
    # - name: Test Simple Example, Build with Older Xcode
    #   shell: bash
    #   run: |
    #     cd examples/simple
    #     # Make sure that we are starting clean; seeing weird failures.
    #     bazelisk clean --expunge
    #     # Default Xcode has SPM 5.4 or later; build with Xcode that has SPM
    #     # less than 5.4.
    #     bazelisk test --xcode_version_config=//:host_xcodes //...

    - name: Test Simple Example, Default Xcode is Incompatible, Use DEVELOPER_DIR
      shell: bash
      run: |
        cd examples/simple
        current_xcode=$(xcode-select --print-path)
        echo "current_xcode: ${current_xcode}"
        # Switch default Xcode to SPM 5.3.
        sudo xcode-select --switch /Applications/Xcode_12.4.app
        # Use DEVELOPER_DIR to specify the current Xcode
        export DEVELOPER_DIR="${current_xcode}"
        bazelisk test //...
        sudo xcode-select --switch "${current_xcode}"

    - name: Test Simple Example, Default Xcode is Incompatible, Use env attribute to set DEVELOPER_DIR
      shell: bash
      run: |
        cd examples/simple_with_dev_dir
        current_xcode=$(xcode-select --print-path)
        # Switch default Xcode to SPM 5.3.
        sudo xcode-select --switch /Applications/Xcode_12.4.app
        # The DEVELOPER_DIR value is specified as an env attribute on spm_repositories.
        bazelisk test //...
        sudo xcode-select --switch "${current_xcode}"

    - name: Test Simple Example Using Revision
      shell: bash
      run: |
        cd examples/simple_revision
        bazelisk test //...

    - name: Test Simple with External Binary Example
      shell: bash
      run: |
        cd examples/simple_with_binary
        bazelisk test //...

    - name: Test Local Package Example
      shell: bash
      run: |
        cd examples/local_package
        bazelisk test //...

    - name: Test Vapor Example
      shell: bash
      run: |
        cd examples/vapor
        bazelisk test //...

    - name: Test iOS Simulator Example
      shell: bash
      run: |
        cd examples/ios_sim
        bazelisk test //...

  ubuntu_build:

    runs-on: ubuntu-20.04

    env:
      CC: clang

    steps:
    - uses: actions/checkout@v2


    - name: Write local.bazelrc File
      shell: bash
      run: |
        cat >local.bazelrc <<EOF
        common --config=ci
        EOF

    - name: Bazel Config for Linux
      shell: bash
      run: |
        # Make sure that the Swift bin directory is first in the PATH. This addresses
        # the `invalid linker name in argument '-fuse-ld=gold'` error when running
        # SPM. In short, it allows SPM to find the correct linker.
        swift_exec=$(which swift)
        real_swift_exec=$(realpath $swift_exec)
        real_swift_dir=$(dirname $real_swift_exec)
        new_path="${real_swift_dir}:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
        cat >>local.bazelrc <<EOF
        build --action_env=PATH=${new_path}
        EOF

    - name: Output the Bazel Info
      shell: bash
      run: |
        bazelisk info

    - name: Execute Tests
      shell: bash
      run: |
        bazelisk test //... 

    - name: Build Anything Not Tested
      shell: bash
      run: |
        bazelisk build //... 

    - name: Test Simple Example
      shell: bash
      run: |
        cd examples/simple
        bazelisk test //...

    - name: Test Simple Example Using Revision
      shell: bash
      run: |
        cd examples/simple_revision
        bazelisk test //...

    - name: Test Local Package Example
      shell: bash
      run: |
        cd examples/local_package
        bazelisk test //...


    - name: Test Vapor Example
      shell: bash
      run: |
        cd examples/vapor
        bazelisk test //...
